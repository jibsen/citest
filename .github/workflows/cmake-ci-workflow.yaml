name: CMake CI

on: [push, pull_request]

jobs:
  windows:
    name: Windows ${{ matrix.config.name }}
    runs-on: windows-2022

    strategy:
      matrix:
        config:
          - name: MinGW
            generator: Ninja

          - name: MSVC x86
            generator: Visual Studio 17 2022
            cmake-flags: -A Win32

          - name: MSVC x64
            generator: Visual Studio 17 2022
            cmake-flags: -A x64

          - name: MSVC x64 shared
            generator: Visual Studio 17 2022
            cmake-flags: -A x64 -DBUILD_SHARED_LIBS=ON

    steps:
      - uses: actions/checkout@v4

      - name: Install Ninja
        if: matrix.config.generator == 'Ninja'
        run: choco install ninja | Out-Null

      - name: Configure
        run: cmake -G "${{ matrix.config.generator }}" ${{ matrix.config.cmake-flags }} -DCMAKE_BUILD_TYPE=Debug -B build

      - name: Build
        run: cd build && cmake --build . --config Debug

      - name: Test
        run: cd build && ctest -V --output-on-failure --interactive-debug-mode 0 -C Debug

  linux:
    name: Linux ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}

    strategy:
      matrix:
        config:
          - name: Clang asan
            cc: clang
            cxx: clang++
            cmake-flags: -DCMAKE_C_FLAGS_DEBUG='-O1 -fno-omit-frame-pointer -fsanitize=address'

          - name: Clang shared
            cc: clang
            cxx: clang++
            cmake-flags: -DBUILD_SHARED_LIBS=ON

          - name: GCC
            cc: gcc
            cxx: g++

    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake ${{ matrix.config.cmake-flags }} -DCMAKE_BUILD_TYPE=Debug -B build

      - name: Build
        run: cd build && cmake --build . --verbose

      - name: Test
        run: cd build && ctest -V --output-on-failure --interactive-debug-mode 0
